scalar Date
scalar DateTime

directive @authed on FIELD_DEFINITION

type Member {
  _id: ID!
  number: Int!
  permission: Permission
  fullName: String
  givenNames: String
  surname: String
  mobile: String
  qualifications: [String!]
  rank: String
  position: String
  team: String
  availabilities(from: Date!, to: Date!): [Availability!]!
}

enum Permission {
  EDIT_SELF
  EDIT_TEAM
  EDIT_UNIT
}

type Availability {
  _id: ID!
  member: Member!
  date: Date!
  shift: Shift!
  available: Boolean!
}

enum Shift {
  MORNING
  AFTERNOON
  NIGHT
}

type ShiftTeams {
  day: String!
  night: String!
}

type Vehicle {
  callsign: String!
  away: Boolean
  with: String
  info: String
}

type Query {
  """Gets all members with an optional team filter"""
  members(team: String): [Member!]! @authed

  """Gets a member by number"""
  member(number: Int!): Member @authed

  """Gets all members who indicated they're availabile at `instant`, or right now"""
  membersAvailable(instant: DateTime): [Member!]! @authed

  """Gets the current authorised member, or null if not logged in."""
  loggedInMember: Member

  """Gets all teams in the unit"""
  teams: [String!]! @authed

  """Gets the current shift teams"""
  shiftTeams: ShiftTeams @authed

  """Gets all know vehicles and who they are with"""
  vehicles: [Vehicle!]! @authed
  vehicle(callsign: String!): Vehicle @authed
}

type AuthPayload {
  token: String!
  member: Member!
}

input AvailabilityInput {
  date: Date!
  shift: Shift!
  available: Boolean!
}

type Mutation {
  """Logs in with a member number and password, and returns a token or an error"""
  login(memberNumber: Int!, password: String!): AuthPayload!

  """Saves availabilities for a member, checking the member has appropriate permissions"""
  setAvailabilities(memberNumber: Int!, availabilities: [AvailabilityInput]!): Boolean @authed

  """Sets who the vehicle is with"""
  setVehicleAway(callsign: String!, with: String, info: String): Boolean! @authed

  """Marks a vehicle as returned"""
  returnVehicle(callsign: String!): Boolean! @authed
}
